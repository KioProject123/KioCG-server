From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Joket_abc <15005771700@qq.com>
Date: Fri, 13 Oct 2023 20:56:34 +0800
Subject: [PATCH] Override upstream patches


diff --git a/src/main/java/io/papermc/paper/commands/FeedbackForwardingSender.java b/src/main/java/io/papermc/paper/commands/FeedbackForwardingSender.java
index e3a5f1ec376319bdfda87fa27ae217bff3914292..26c6a95966a7751cc22e25092bd6cced5f641ea7 100644
--- a/src/main/java/io/papermc/paper/commands/FeedbackForwardingSender.java
+++ b/src/main/java/io/papermc/paper/commands/FeedbackForwardingSender.java
@@ -49,7 +49,7 @@ public final class FeedbackForwardingSender extends ServerCommandSender {
 
     @Override
     public String getName() {
-        return "FeedbackForwardingSender";
+        return io.papermc.paper.configuration.GlobalConfiguration.get().kiocgConfig.feedbackForwardingSenderName; // KioCG
     }
 
     @Override
diff --git a/src/main/java/io/papermc/paper/configuration/GlobalConfiguration.java b/src/main/java/io/papermc/paper/configuration/GlobalConfiguration.java
index a6f58b3457b7477015c5c6d969e7d83017dd3fa1..8de3c3aac56415dca3815d5b103c7501f6d33f7e 100644
--- a/src/main/java/io/papermc/paper/configuration/GlobalConfiguration.java
+++ b/src/main/java/io/papermc/paper/configuration/GlobalConfiguration.java
@@ -341,4 +341,12 @@ public class GlobalConfiguration extends ConfigurationPart {
         public boolean disableChorusPlantUpdates = false;
         public boolean disableMushroomBlockUpdates = false;
     }
+
+    // KioCG start
+    public KiocgConfig kiocgConfig;
+
+    public class KiocgConfig extends ConfigurationPart {
+        public String feedbackForwardingSenderName = "MOSS";
+    }
+    // KioCG end
 }
diff --git a/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java b/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
index 071d3877e386a0c7c4d2f2e8ddd06e0765c49d0d..4a3c4a60ef1c2ebc4cb9ea1ec5e899a30e0733a7 100644
--- a/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
+++ b/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
@@ -538,4 +538,12 @@ public class WorldConfiguration extends ConfigurationPart {
             VANILLA, EIGENCRAFT, ALTERNATE_CURRENT
         }
     }
+
+    // KioCG start
+    public KiocgConfig kiocgConfig;
+
+    public class KiocgConfig extends ConfigurationPart {
+
+    }
+    // KioCG end
 }
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 39ecb12d4296852ee5865dcfa2b8b6c3233a4804..0ef633213d26f30665a5631438020149a13eff1a 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -1213,7 +1213,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
                         this.recentTps[3] = tps15.getAverage();
                         // Purpur end
                     // Paper end
-                        lagging = recentTps[0] < org.purpurmc.purpur.PurpurConfig.laggingThreshold; // Purpur
+                        lagging = recentTps[1] < org.purpurmc.purpur.PurpurConfig.laggingThreshold; // Purpur // KioCG - 防止TPS瞬时波动
                     tickSection = curTime;
                 } else curTime = Util.getNanos(); // Paper
                 // Spigot end
diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 07c6e9c5a32ef7155525924d1a0e433943787819..cd871ef34b1ddc8b3a4c0454122da607bee90281 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -2311,7 +2311,7 @@ public class ServerPlayer extends Player {
             if (afk) {
                 getBukkitEntity().setPlayerListName(org.purpurmc.purpur.PurpurConfig.afkTabListPrefix + prefix + scoreboardName + suffix + org.purpurmc.purpur.PurpurConfig.afkTabListSuffix, true);
             } else {
-                getBukkitEntity().setPlayerListName(prefix + scoreboardName + suffix);
+                getBukkitEntity().setPlayerListName(prefix + scoreboardName + suffix, true); // KioCG - use minimessage
             }
         }
 
diff --git a/src/main/java/net/minecraft/world/entity/LivingEntity.java b/src/main/java/net/minecraft/world/entity/LivingEntity.java
index ac57b2d31019eeb12a0d63266b900c606d90b05e..d618f46a26aac5d65d621284b4ced7f1b6bbeded 100644
--- a/src/main/java/net/minecraft/world/entity/LivingEntity.java
+++ b/src/main/java/net/minecraft/world/entity/LivingEntity.java
@@ -428,7 +428,12 @@ public abstract class LivingEntity extends Entity implements Attackable {
                         double d1 = this.level().getWorldBorder().getDamagePerBlock();
 
                         if (d1 > 0.0D) {
-                            if (level().purpurConfig.teleportIfOutsideBorder && this instanceof ServerPlayer serverPlayer) { serverPlayer.teleport(io.papermc.paper.util.MCUtil.toLocation(level(), ((ServerLevel) level()).getSharedSpawnPos())); return; } // Purpur
+                            // KioCG start
+                            if (level().purpurConfig.teleportIfOutsideBorder && this instanceof ServerPlayer serverPlayer) {
+                                serverPlayer.teleport(io.papermc.paper.util.MCUtil.toLocation(level(), ((ServerLevel) level()).getWorldBorder().clampToBounds(serverPlayer.getX(), serverPlayer.getY(), serverPlayer.getZ())).toHighestLocation());
+                                return;
+                            } // Purpur
+                            // KioCG end
                             this.hurt(this.damageSources().outOfBorder(), (float) Math.max(1, Mth.floor(-d0 * d1)));
                         }
                     }
diff --git a/src/main/java/net/minecraft/world/entity/animal/SnowGolem.java b/src/main/java/net/minecraft/world/entity/animal/SnowGolem.java
index 8b364fe9f3a3d47ae6daa331b8f16941ca17432a..fae47a2e8dd212bd0ad3fa768a6bcc9898fde95a 100644
--- a/src/main/java/net/minecraft/world/entity/animal/SnowGolem.java
+++ b/src/main/java/net/minecraft/world/entity/animal/SnowGolem.java
@@ -228,7 +228,7 @@ public class SnowGolem extends AbstractGolem implements Shearable, RangedAttackM
             this.setPumpkin(false);
             this.forceDrops = true; // CraftBukkit
             if (level().purpurConfig.snowGolemDropsPumpkin) // Purpur
-            for (int i = 0; i < 1 + (org.purpurmc.purpur.PurpurConfig.allowShearsLooting ? looting : 0); i++) // Purpur
+            // for (int i = 0; i < 1 + (org.purpurmc.purpur.PurpurConfig.allowShearsLooting ? looting : 0); i++) // Purpur // KioCG - fix dupe
             this.spawnAtLocation(new ItemStack(Items.CARVED_PUMPKIN), 1.7F);
             this.forceDrops = false; // CraftBukkit
         }
diff --git a/src/main/java/net/minecraft/world/inventory/AnvilMenu.java b/src/main/java/net/minecraft/world/inventory/AnvilMenu.java
index 27d76e0c4809d333c548379bf78ec2db083b027e..0951f89827ca959357a4febef3213044169e7579 100644
--- a/src/main/java/net/minecraft/world/inventory/AnvilMenu.java
+++ b/src/main/java/net/minecraft/world/inventory/AnvilMenu.java
@@ -324,6 +324,7 @@ public class AnvilMenu extends ItemCombinerMenu {
                                     name = name.replace("&" + match, "\u00a7" + match.toLowerCase(java.util.Locale.ROOT));
                                 }
                                 //name = name.replaceAll("(?i)&([0-9a-fr])", "\u00a7$1");
+                                name = name.replaceAll("(?i)&#([0-9a-f])([0-9a-f])([0-9a-f])([0-9a-f])([0-9a-f])([0-9a-f])", "\u00a7x\u00a7$1\u00a7$2\u00a7$3\u00a7$4\u00a7$5\u00a7$6"); // KioCG
                             }
                             if (player.hasPermission("purpur.anvil.format")) {
                                 java.util.regex.Matcher matcher = java.util.regex.Pattern.compile("(?i)&([k-or])").matcher(name);
diff --git a/src/main/java/net/minecraft/world/level/block/FarmBlock.java b/src/main/java/net/minecraft/world/level/block/FarmBlock.java
index c4eca9db159d6a581d863558ebc3008d51d25cfb..fc266cbe85b1aae64a4f284dc128378d88fe5a01 100644
--- a/src/main/java/net/minecraft/world/level/block/FarmBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/FarmBlock.java
@@ -110,6 +110,24 @@ public class FarmBlock extends Block {
     @Override
     public void fallOn(Level world, BlockState state, BlockPos pos, Entity entity, float fallDistance) {
         super.fallOn(world, state, pos, entity, fallDistance); // CraftBukkit - moved here as game rules / events shouldn't affect fall damage.
+        // KioCG start - moved from below
+        // Purpur start
+        if (world.purpurConfig.farmlandTramplingDisabled) return;
+        if (world.purpurConfig.farmlandTramplingOnlyPlayers && !(entity instanceof Player)) return;
+        if (world.purpurConfig.farmlandAlpha) {
+            Block block = world.getBlockState(pos.below()).getBlock();
+            if (block instanceof FenceBlock || block instanceof WallBlock) {
+                return;
+            }
+        }
+        if (world.purpurConfig.farmlandTramplingFeatherFalling) {
+            Iterator<net.minecraft.world.item.ItemStack> armor = entity.getArmorSlots().iterator();
+            if (armor.hasNext() && net.minecraft.world.item.enchantment.EnchantmentHelper.getItemEnchantmentLevel(net.minecraft.world.item.enchantment.Enchantments.FALL_PROTECTION, armor.next()) >= (int) entity.fallDistance) {
+                return;
+            }
+        }
+        // Purpur end
+        // KioCG end - moved from below
         if (!world.isClientSide && (world.purpurConfig.farmlandTrampleHeight >= 0D ? fallDistance >= world.purpurConfig.farmlandTrampleHeight : world.random.nextFloat() < fallDistance - 0.5F) && entity instanceof LivingEntity && (entity instanceof Player || world.purpurConfig.farmlandBypassMobGriefing || world.getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING)) && entity.getBbWidth() * entity.getBbWidth() * entity.getBbHeight() > 0.512F) { // Purpur
             // CraftBukkit start - Interact soil
             org.bukkit.event.Cancellable cancellable;
@@ -124,22 +142,24 @@ public class FarmBlock extends Block {
                 return;
             }
 
-            // Purpur start
-            if (world.purpurConfig.farmlandTramplingDisabled) return;
-            if (world.purpurConfig.farmlandTramplingOnlyPlayers && !(entity instanceof Player)) return;
-            if (world.purpurConfig.farmlandAlpha) {
-                Block block = world.getBlockState(pos.below()).getBlock();
-                if (block instanceof FenceBlock || block instanceof WallBlock) {
-                    return;
-                }
-            }
-            if (world.purpurConfig.farmlandTramplingFeatherFalling) {
-                Iterator<net.minecraft.world.item.ItemStack> armor = entity.getArmorSlots().iterator();
-                if (armor.hasNext() && net.minecraft.world.item.enchantment.EnchantmentHelper.getItemEnchantmentLevel(net.minecraft.world.item.enchantment.Enchantments.FALL_PROTECTION, armor.next()) >= (int) entity.fallDistance) {
-                    return;
-                }
-            }
-            // Purpur end
+            // KioCG start
+//            // Purpur start
+//            if (world.purpurConfig.farmlandTramplingDisabled) return;
+//            if (world.purpurConfig.farmlandTramplingOnlyPlayers && !(entity instanceof Player)) return;
+//            if (world.purpurConfig.farmlandAlpha) {
+//                Block block = world.getBlockState(pos.below()).getBlock();
+//                if (block instanceof FenceBlock || block instanceof WallBlock) {
+//                    return;
+//                }
+//            }
+//            if (world.purpurConfig.farmlandTramplingFeatherFalling) {
+//                Iterator<net.minecraft.world.item.ItemStack> armor = entity.getArmorSlots().iterator();
+//                if (armor.hasNext() && net.minecraft.world.item.enchantment.EnchantmentHelper.getItemEnchantmentLevel(net.minecraft.world.item.enchantment.Enchantments.FALL_PROTECTION, armor.next()) >= (int) entity.fallDistance) {
+//                    return;
+//                }
+//            }
+//            // Purpur end
+            // KioCG end
             if (!CraftEventFactory.callEntityChangeBlockEvent(entity, pos, Blocks.DIRT.defaultBlockState())) {
                 return;
             }
diff --git a/src/main/java/org/purpurmc/purpur/entity/PhantomFlames.java b/src/main/java/org/purpurmc/purpur/entity/PhantomFlames.java
index d0d951f867390fa12cae2ba2a49212354b10d7b0..03f0ab2a650762231e6c74f9f5958e7bd5607e1a 100644
--- a/src/main/java/org/purpurmc/purpur/entity/PhantomFlames.java
+++ b/src/main/java/org/purpurmc/purpur/entity/PhantomFlames.java
@@ -98,7 +98,7 @@ public class PhantomFlames extends LlamaSpit {
         Entity shooter = this.getOwner();
         if (shooter instanceof LivingEntity) {
             Entity target = entityHitResult.getEntity();
-            if (canGrief || (target instanceof LivingEntity && !(target instanceof ArmorStand))) {
+            if (canGrief || target instanceof net.minecraft.world.entity.player.Player) { // KioCG - 只伤害玩家
                 boolean hurt = target.hurt(target.damageSources().mobProjectile(this, (LivingEntity) shooter), level().purpurConfig.phantomFlameDamage);
                 if (hurt && level().purpurConfig.phantomFlameFireTime > 0) {
                     target.setSecondsOnFire(level().purpurConfig.phantomFlameFireTime);
