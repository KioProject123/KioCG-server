From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Joket_abc <15005771700@qq.com>
Date: Fri, 16 Jun 2023 05:11:09 +0800
Subject: [PATCH] Override upstream patches


diff --git a/src/main/java/io/papermc/paper/commands/FeedbackForwardingSender.java b/src/main/java/io/papermc/paper/commands/FeedbackForwardingSender.java
index e3a5f1ec376319bdfda87fa27ae217bff3914292..f46d51069f338bef7d34a5bbb8c2f46ca4727ce5 100644
--- a/src/main/java/io/papermc/paper/commands/FeedbackForwardingSender.java
+++ b/src/main/java/io/papermc/paper/commands/FeedbackForwardingSender.java
@@ -49,7 +49,7 @@ public final class FeedbackForwardingSender extends ServerCommandSender {
 
     @Override
     public String getName() {
-        return "FeedbackForwardingSender";
+        return "MOSS"; // KioCG
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 9c729910a39b010bf2123517c0bffc5a8993e6d1..7dd20d87ee1199ad33b34c14199c628defce33cb 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -2163,7 +2163,7 @@ public class ServerPlayer extends Player {
 
     public void resetLastActionTime() {
         this.lastActionTime = Util.getMillis();
-        this.setAfk(false); // Purpur
+        //this.setAfk(false); // Purpur // KioCG - 使用插件控制AFK
     }
 
     // Purpur Start
diff --git a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
index 9cc3ab8cd3f7ab7f8fbf4d9d14f25ea0bd757eec..cbf2d52e107fc5f0043b67d6a4de975675d319c1 100644
--- a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
+++ b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
@@ -466,7 +466,7 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Tic
 
         if (this.player.getLastActionTime() > 0L && this.server.getPlayerIdleTimeout() > 0 && Util.getMillis() - this.player.getLastActionTime() > (long) this.server.getPlayerIdleTimeout() * 1000L * 60L && !this.player.wonGame) { // Paper - Prevent AFK kick while watching end credits.
             // Purpur start
-            this.player.setAfk(true);
+            //this.player.setAfk(true); // KioCG - 使用插件控制AFK
             if (!this.player.level().purpurConfig.idleTimeoutKick || (!Boolean.parseBoolean(System.getenv("PURPUR_FORCE_IDLE_KICK")) && kickPermissionCache.getUnchecked(this.player.getBukkitEntity()))) {
                 return;
             }
diff --git a/src/main/java/net/minecraft/world/entity/LivingEntity.java b/src/main/java/net/minecraft/world/entity/LivingEntity.java
index 0b08cf7b26731ffd6f3909342f4e3a92fe0c813e..f0ac2600208cb5ce2835ee739541c85c82082144 100644
--- a/src/main/java/net/minecraft/world/entity/LivingEntity.java
+++ b/src/main/java/net/minecraft/world/entity/LivingEntity.java
@@ -428,7 +428,12 @@ public abstract class LivingEntity extends Entity implements Attackable {
                         double d1 = this.level().getWorldBorder().getDamagePerBlock();
 
                         if (d1 > 0.0D) {
-                            if (level().purpurConfig.teleportIfOutsideBorder && this instanceof ServerPlayer serverPlayer) { serverPlayer.teleport(io.papermc.paper.util.MCUtil.toLocation(level(), ((ServerLevel) level()).getSharedSpawnPos())); return; } // Purpur
+                            // KioCG start
+                            if (level().purpurConfig.teleportIfOutsideBorder && this instanceof ServerPlayer serverPlayer) {
+                                serverPlayer.teleport(io.papermc.paper.util.MCUtil.toLocation(level(), ((ServerLevel) level()).getWorldBorder().clampToBounds(serverPlayer.getX(), serverPlayer.getY(), serverPlayer.getZ())).toHighestLocation());
+                                return;
+                            } // Purpur
+                            // KioCG end
                             this.hurt(this.damageSources().outOfBorder(), (float) Math.max(1, Mth.floor(-d0 * d1)));
                         }
                     }
diff --git a/src/main/java/net/minecraft/world/entity/ai/behavior/Behavior.java b/src/main/java/net/minecraft/world/entity/ai/behavior/Behavior.java
index 651c156dc8a5aad04d461add02e22147af657d07..9601092b5057396dd48bf47e2c639075bf5f5690 100644
--- a/src/main/java/net/minecraft/world/entity/ai/behavior/Behavior.java
+++ b/src/main/java/net/minecraft/world/entity/ai/behavior/Behavior.java
@@ -50,7 +50,7 @@ public abstract class Behavior<E extends LivingEntity> implements BehaviorContro
     public final boolean tryStart(ServerLevel world, E entity, long time) {
         // Paper start - behavior tick rate
         int tickRate = java.util.Objects.requireNonNullElse(world.paperConfig().tickRates.behavior.get(entity.getType(), this.configKey), -1);
-        if (tickRate > -1 && time < this.endTimestamp + tickRate) {
+        if (tickRate != -1 && time < this.endTimestamp + tickRate) { // KioCG - > → !=
             return false;
         }
         // Paper end
diff --git a/src/main/java/net/minecraft/world/entity/animal/SnowGolem.java b/src/main/java/net/minecraft/world/entity/animal/SnowGolem.java
index 8b364fe9f3a3d47ae6daa331b8f16941ca17432a..fae47a2e8dd212bd0ad3fa768a6bcc9898fde95a 100644
--- a/src/main/java/net/minecraft/world/entity/animal/SnowGolem.java
+++ b/src/main/java/net/minecraft/world/entity/animal/SnowGolem.java
@@ -228,7 +228,7 @@ public class SnowGolem extends AbstractGolem implements Shearable, RangedAttackM
             this.setPumpkin(false);
             this.forceDrops = true; // CraftBukkit
             if (level().purpurConfig.snowGolemDropsPumpkin) // Purpur
-            for (int i = 0; i < 1 + (org.purpurmc.purpur.PurpurConfig.allowShearsLooting ? looting : 0); i++) // Purpur
+            // for (int i = 0; i < 1 + (org.purpurmc.purpur.PurpurConfig.allowShearsLooting ? looting : 0); i++) // Purpur // KioCG - fix dupe
             this.spawnAtLocation(new ItemStack(Items.CARVED_PUMPKIN), 1.7F);
             this.forceDrops = false; // CraftBukkit
         }
diff --git a/src/main/java/net/minecraft/world/inventory/AnvilMenu.java b/src/main/java/net/minecraft/world/inventory/AnvilMenu.java
index cb4a1cd39f12d90d30dd95efa2de58f57d9c6ee0..858c6b427fb836552637b9b6d88ac3b45e3d6dad 100644
--- a/src/main/java/net/minecraft/world/inventory/AnvilMenu.java
+++ b/src/main/java/net/minecraft/world/inventory/AnvilMenu.java
@@ -320,6 +320,7 @@ public class AnvilMenu extends ItemCombinerMenu {
                                     name = name.replace("&" + match, "\u00a7" + match.toLowerCase(java.util.Locale.ROOT));
                                 }
                                 //name = name.replaceAll("(?i)&([0-9a-fr])", "\u00a7$1");
+                                name = name.replaceAll("(?i)&#([0-9a-f])([0-9a-f])([0-9a-f])([0-9a-f])([0-9a-f])([0-9a-f])", "\u00a7x\u00a7$1\u00a7$2\u00a7$3\u00a7$4\u00a7$5\u00a7$6"); // KioCG
                             }
                             if (player.hasPermission("purpur.anvil.format")) {
                                 java.util.regex.Matcher matcher = java.util.regex.Pattern.compile("(?i)&([k-or])").matcher(name);
