From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Joket_abc <15005771700@qq.com>
Date: Tue, 21 Mar 2023 04:54:58 +0800
Subject: [PATCH] Override upstream patches


diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 8a4be66f967dfd6b57ab542ae9b06c840647486d..f5520b83d150178f77a03a828079455f346eb2ea 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -2101,7 +2101,7 @@ public class ServerPlayer extends Player {
 
     public void resetLastActionTime() {
         this.lastActionTime = Util.getMillis();
-        this.setAfk(false); // Purpur
+        //this.setAfk(false); // Purpur // KioCG - 使用插件控制AFK
     }
 
     // Purpur Start
diff --git a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
index 21211e2790cd667ec389353fb90fb700f33421cc..e50b021968a0a816c49b2aaffc4f56fc2f4c176e 100644
--- a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
+++ b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
@@ -462,7 +462,7 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Tic
 
         if (this.player.getLastActionTime() > 0L && this.server.getPlayerIdleTimeout() > 0 && Util.getMillis() - this.player.getLastActionTime() > (long) (this.server.getPlayerIdleTimeout() * 1000 * 60) && !this.player.wonGame) { // Paper - Prevent AFK kick while watching end credits.
             // Purpur start
-            this.player.setAfk(true);
+            //this.player.setAfk(true); // KioCG - 使用插件控制AFK
             if (!this.player.level.purpurConfig.idleTimeoutKick || kickPermissionCache.getUnchecked(this.player.getBukkitEntity())) {
                 return;
             }
diff --git a/src/main/java/net/minecraft/world/entity/LivingEntity.java b/src/main/java/net/minecraft/world/entity/LivingEntity.java
index 8d7c33e16f9eaec2120c5aad75172ff656d1bd17..27a98873f73bc1e6de7df43983a1431794a95e48 100644
--- a/src/main/java/net/minecraft/world/entity/LivingEntity.java
+++ b/src/main/java/net/minecraft/world/entity/LivingEntity.java
@@ -411,7 +411,12 @@ public abstract class LivingEntity extends Entity implements Attackable {
                         double d1 = this.level.getWorldBorder().getDamagePerBlock();
 
                         if (d1 > 0.0D) {
-                        if (level.purpurConfig.teleportIfOutsideBorder && this instanceof ServerPlayer) { ((ServerPlayer) this).teleport(io.papermc.paper.util.MCUtil.toLocation(level, ((ServerLevel) level).getSharedSpawnPos())); return; } // Purpur
+                            // KioCG start
+                            if (level.purpurConfig.teleportIfOutsideBorder && this instanceof ServerPlayer player) {
+                                player.teleport(io.papermc.paper.util.MCUtil.toLocation(level, ((ServerLevel) level).getWorldBorder().clampToBounds(player.getX(), player.getY(), player.getZ())).toHighestLocation());
+                                return;
+                            }
+                            // KioCG end
                             this.hurt(this.damageSources().inWall(), (float) Math.max(1, Mth.floor(-d0 * d1)));
                         }
                     }
diff --git a/src/main/java/net/minecraft/world/entity/ai/behavior/Behavior.java b/src/main/java/net/minecraft/world/entity/ai/behavior/Behavior.java
index 651c156dc8a5aad04d461add02e22147af657d07..9601092b5057396dd48bf47e2c639075bf5f5690 100644
--- a/src/main/java/net/minecraft/world/entity/ai/behavior/Behavior.java
+++ b/src/main/java/net/minecraft/world/entity/ai/behavior/Behavior.java
@@ -50,7 +50,7 @@ public abstract class Behavior<E extends LivingEntity> implements BehaviorContro
     public final boolean tryStart(ServerLevel world, E entity, long time) {
         // Paper start - behavior tick rate
         int tickRate = java.util.Objects.requireNonNullElse(world.paperConfig().tickRates.behavior.get(entity.getType(), this.configKey), -1);
-        if (tickRate > -1 && time < this.endTimestamp + tickRate) {
+        if (tickRate != -1 && time < this.endTimestamp + tickRate) { // KioCG - > → !=
             return false;
         }
         // Paper end
diff --git a/src/main/java/net/minecraft/world/entity/animal/SnowGolem.java b/src/main/java/net/minecraft/world/entity/animal/SnowGolem.java
index 34fa428268a863e8e36b6340a482ec67f1199efb..9459fb5e73e5da0d31e32576a1110b972d87eef0 100644
--- a/src/main/java/net/minecraft/world/entity/animal/SnowGolem.java
+++ b/src/main/java/net/minecraft/world/entity/animal/SnowGolem.java
@@ -228,7 +228,7 @@ public class SnowGolem extends AbstractGolem implements Shearable, RangedAttackM
             this.setPumpkin(false);
             this.forceDrops = true; // CraftBukkit
             if (level.purpurConfig.snowGolemDropsPumpkin) // Purpur
-            for (int i = 0; i < 1 + (org.purpurmc.purpur.PurpurConfig.allowShearsLooting ? looting : 0); i++) // Purpur
+            // for (int i = 0; i < 1 + (org.purpurmc.purpur.PurpurConfig.allowShearsLooting ? looting : 0); i++) // Purpur // KioCG - fix dupe
             this.spawnAtLocation(new ItemStack(Items.CARVED_PUMPKIN), 1.7F);
             this.forceDrops = false; // CraftBukkit
         }
diff --git a/src/main/java/net/minecraft/world/inventory/AnvilMenu.java b/src/main/java/net/minecraft/world/inventory/AnvilMenu.java
index 7ade5cd93b3d7b7259bf3246a8b74b0b31407817..09b202aea81de2844cc2ddefed39097eb0b69fbd 100644
--- a/src/main/java/net/minecraft/world/inventory/AnvilMenu.java
+++ b/src/main/java/net/minecraft/world/inventory/AnvilMenu.java
@@ -322,6 +322,7 @@ public class AnvilMenu extends ItemCombinerMenu {
                                 name = name.replace("&" + match, "\u00a7" + match.toLowerCase(java.util.Locale.ROOT));
                             }
                             //name = name.replaceAll("(?i)&([0-9a-fr])", "\u00a7$1");
+                            name = name.replaceAll("(?i)&#([0-9a-f])([0-9a-f])([0-9a-f])([0-9a-f])([0-9a-f])([0-9a-f])", "\u00a7x\u00a7$1\u00a7$2\u00a7$3\u00a7$4\u00a7$5\u00a7$6"); // KioCG
                         }
                         if (player.hasPermission("purpur.anvil.format")) {
                             java.util.regex.Matcher matcher = java.util.regex.Pattern.compile("(?i)&([k-or])").matcher(name);
