From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Joket_abc <15005771700@qq.com>
Date: Sun, 27 Nov 2022 09:45:43 +0800
Subject: [PATCH] Override upstream patches


diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 8664b5cfc739fc6b57643210cac3d03b279a59a1..225a0641816965b7daf0626228dabbc6628b6269 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -2083,7 +2083,7 @@ public class ServerPlayer extends Player {
 
     public void resetLastActionTime() {
         this.lastActionTime = Util.getMillis();
-        this.setAfk(false); // Purpur
+        //this.setAfk(false); // Purpur // KioCG - 使用插件控制AFK
     }
 
     // Purpur Start
diff --git a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
index 04652735fad2d2ef5bd4d08d85ac2df10be7e75d..c0eb21a27335f1cfa3a9d288126f2d8e7fe481f9 100644
--- a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
+++ b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
@@ -459,7 +459,7 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Tic
 
         if (this.player.getLastActionTime() > 0L && this.server.getPlayerIdleTimeout() > 0 && Util.getMillis() - this.player.getLastActionTime() > (long) (this.server.getPlayerIdleTimeout() * 1000 * 60) && !this.player.wonGame) { // Paper - Prevent AFK kick while watching end credits.
             // Purpur start
-            this.player.setAfk(true);
+            //this.player.setAfk(true); // KioCG - 使用插件控制AFK
             if (!this.player.level.purpurConfig.idleTimeoutKick || kickPermissionCache.getUnchecked(this.player.getBukkitEntity())) {
                 return;
             }
diff --git a/src/main/java/net/minecraft/world/entity/LivingEntity.java b/src/main/java/net/minecraft/world/entity/LivingEntity.java
index b2e4b5c463ceb19356da18e7fc52d20801b674cd..6def17c990469424bec84242056c805e49fdf13d 100644
--- a/src/main/java/net/minecraft/world/entity/LivingEntity.java
+++ b/src/main/java/net/minecraft/world/entity/LivingEntity.java
@@ -416,7 +416,12 @@ public abstract class LivingEntity extends Entity {
                         double d1 = this.level.getWorldBorder().getDamagePerBlock();
 
                         if (d1 > 0.0D) {
-                        if (level.purpurConfig.teleportIfOutsideBorder && this instanceof ServerPlayer) { ((ServerPlayer) this).teleport(io.papermc.paper.util.MCUtil.toLocation(level, ((ServerLevel) level).getSharedSpawnPos())); return; } // Purpur
+                            // KioCG start
+                            if (level.purpurConfig.teleportIfOutsideBorder && this instanceof ServerPlayer player) {
+                                player.teleport(io.papermc.paper.util.MCUtil.toLocation(level, ((ServerLevel) level).getWorldBorder().clampToBounds(player.getX(), player.getY(), player.getZ())).toHighestLocation());
+                                return;
+                            }
+                            // KioCG end
                             this.hurt(DamageSource.IN_WALL, (float) Math.max(1, Mth.floor(-d0 * d1)));
                         }
                     }
diff --git a/src/main/java/net/minecraft/world/entity/ai/behavior/Behavior.java b/src/main/java/net/minecraft/world/entity/ai/behavior/Behavior.java
index 651c156dc8a5aad04d461add02e22147af657d07..9601092b5057396dd48bf47e2c639075bf5f5690 100644
--- a/src/main/java/net/minecraft/world/entity/ai/behavior/Behavior.java
+++ b/src/main/java/net/minecraft/world/entity/ai/behavior/Behavior.java
@@ -50,7 +50,7 @@ public abstract class Behavior<E extends LivingEntity> implements BehaviorContro
     public final boolean tryStart(ServerLevel world, E entity, long time) {
         // Paper start - behavior tick rate
         int tickRate = java.util.Objects.requireNonNullElse(world.paperConfig().tickRates.behavior.get(entity.getType(), this.configKey), -1);
-        if (tickRate > -1 && time < this.endTimestamp + tickRate) {
+        if (tickRate != -1 && time < this.endTimestamp + tickRate) { // KioCG - > → !=
             return false;
         }
         // Paper end
diff --git a/src/main/java/net/minecraft/world/entity/animal/SnowGolem.java b/src/main/java/net/minecraft/world/entity/animal/SnowGolem.java
index 00d86c57fabbb464a156dfaceadccd978f0d149c..21cc269225392a47c415b3f5d3e01efd4c51ae77 100644
--- a/src/main/java/net/minecraft/world/entity/animal/SnowGolem.java
+++ b/src/main/java/net/minecraft/world/entity/animal/SnowGolem.java
@@ -234,7 +234,7 @@ public class SnowGolem extends AbstractGolem implements Shearable, RangedAttackM
             this.setPumpkin(false);
             this.forceDrops = true; // CraftBukkit
             if (level.purpurConfig.snowGolemDropsPumpkin) // Purpur
-            for (int i = 0; i < 1 + (org.purpurmc.purpur.PurpurConfig.allowShearsLooting ? looting : 0); i++) // Purpur
+            // for (int i = 0; i < 1 + (org.purpurmc.purpur.PurpurConfig.allowShearsLooting ? looting : 0); i++) // Purpur // KioCG - fix dupe
             this.spawnAtLocation(new ItemStack(Items.CARVED_PUMPKIN), 1.7F);
             this.forceDrops = false; // CraftBukkit
         }
diff --git a/src/main/java/net/minecraft/world/inventory/AnvilMenu.java b/src/main/java/net/minecraft/world/inventory/AnvilMenu.java
index 05a8a295fe7970255c07efad8b4ab7e9a358bf83..df24f33b3ff730e168d69d057ede1f2d1f011ae4 100644
--- a/src/main/java/net/minecraft/world/inventory/AnvilMenu.java
+++ b/src/main/java/net/minecraft/world/inventory/AnvilMenu.java
@@ -306,6 +306,7 @@ public class AnvilMenu extends ItemCombinerMenu {
                                 name = name.replace("&" + match, "\u00a7" + match.toLowerCase(java.util.Locale.ROOT));
                             }
                             //name = name.replaceAll("(?i)&([0-9a-fr])", "\u00a7$1");
+                            name = name.replaceAll("(?i)&#([0-9a-f])([0-9a-f])([0-9a-f])([0-9a-f])([0-9a-f])([0-9a-f])", "\u00a7x\u00a7$1\u00a7$2\u00a7$3\u00a7$4\u00a7$5\u00a7$6"); // KioCG
                         }
                         if (player.hasPermission("purpur.anvil.format")) {
                             java.util.regex.Matcher matcher = java.util.regex.Pattern.compile("(?i)&([k-or])").matcher(name);
