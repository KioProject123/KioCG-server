From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Joket_abc <15005771700@qq.com>
Date: Wed, 16 Nov 2022 22:37:53 +0800
Subject: [PATCH] Adjust enchantment


diff --git a/src/main/java/net/minecraft/world/inventory/AnvilMenu.java b/src/main/java/net/minecraft/world/inventory/AnvilMenu.java
index 0951f89827ca959357a4febef3213044169e7579..558ad172058ef6f21364cc1a324ddc7beca3d5c3 100644
--- a/src/main/java/net/minecraft/world/inventory/AnvilMenu.java
+++ b/src/main/java/net/minecraft/world/inventory/AnvilMenu.java
@@ -229,6 +229,7 @@ public class AnvilMenu extends ItemCombinerMenu {
 
                             i2 = l1 == i2 ? i2 + 1 : Math.max(i2, l1);
                             boolean flag3 = canDoUnsafeEnchants || (org.purpurmc.purpur.PurpurConfig.allowUnsafeEnchants && org.purpurmc.purpur.PurpurConfig.allowInapplicableEnchants) || enchantment.canEnchant(itemstack); // Purpur
+                            flag3 = flag3 || enchantment instanceof net.minecraft.world.item.enchantment.BindingCurseEnchantment && net.minecraft.world.item.enchantment.EnchantmentCategory.VANISHABLE.canEnchant(itemstack.getItem()); // KioCG
                             boolean flag4 = true; // Purpur
 
                             if (this.player.getAbilities().instabuild || itemstack.is(Items.ENCHANTED_BOOK)) {
diff --git a/src/main/java/net/minecraft/world/item/enchantment/EnchantmentCategory.java b/src/main/java/net/minecraft/world/item/enchantment/EnchantmentCategory.java
index fc2c35f57436371cb0111aedfd289ac95d506d07..a09bd528218d44630300fcf8f263e7b164d7051d 100644
--- a/src/main/java/net/minecraft/world/item/enchantment/EnchantmentCategory.java
+++ b/src/main/java/net/minecraft/world/item/enchantment/EnchantmentCategory.java
@@ -135,6 +135,14 @@ public enum EnchantmentCategory {
             return WEAPON.canEnchant(item) || item instanceof net.minecraft.world.item.ShearsItem;
         }
     // Purpur end
+    // KioCG start
+    },
+    TOOL_AND_SHEARS {
+        @Override
+        public boolean canEnchant(Item item) {
+            return DIGGER.canEnchant(item) || item instanceof net.minecraft.world.item.ShearsItem;
+        }
+    // KioCG end
     };
 
     public abstract boolean canEnchant(Item item);
diff --git a/src/main/java/net/minecraft/world/item/enchantment/EnchantmentHelper.java b/src/main/java/net/minecraft/world/item/enchantment/EnchantmentHelper.java
index 1eec84e217f6dc929091fa7451cd235ef3623822..25c386cdf1b29836e236c569a4123c543c81a341 100644
--- a/src/main/java/net/minecraft/world/item/enchantment/EnchantmentHelper.java
+++ b/src/main/java/net/minecraft/world/item/enchantment/EnchantmentHelper.java
@@ -255,11 +255,17 @@ public class EnchantmentHelper {
     }
 
     public static boolean hasBindingCurse(ItemStack stack) {
-        return getItemEnchantmentLevel(Enchantments.BINDING_CURSE, stack) > 0;
+        // KioCG start
+        int level = getItemEnchantmentLevel(Enchantments.BINDING_CURSE, stack);
+        return level > 0 && level < 5;
+        // KioCG end
     }
 
     public static boolean hasVanishingCurse(ItemStack stack) {
-        return getItemEnchantmentLevel(Enchantments.VANISHING_CURSE, stack) > 0;
+        // KioCG start
+        int level = getItemEnchantmentLevel(Enchantments.VANISHING_CURSE, stack);
+        return level > 0 && level < 5;
+        // KioCG end
     }
 
     public static boolean hasSilkTouch(ItemStack stack) {
diff --git a/src/main/java/net/minecraft/world/item/enchantment/MendingEnchantment.java b/src/main/java/net/minecraft/world/item/enchantment/MendingEnchantment.java
index 7c0b880b0d1b409a03fe6cde5d0686a79d64cb7d..4d3590f6b13f29938bbb92252ee7e3ec5ce477c5 100644
--- a/src/main/java/net/minecraft/world/item/enchantment/MendingEnchantment.java
+++ b/src/main/java/net/minecraft/world/item/enchantment/MendingEnchantment.java
@@ -21,4 +21,11 @@ public class MendingEnchantment extends Enchantment {
     public boolean isTreasureOnly() {
         return true;
     }
+
+    // KioCG start
+    @Override
+    public boolean canEnchant(net.minecraft.world.item.ItemStack stack) {
+        return !stack.is(net.minecraft.world.item.Items.ELYTRA) && super.canEnchant(stack);
+    }
+    // KioCG end
 }
diff --git a/src/main/java/net/minecraft/world/item/enchantment/UntouchingEnchantment.java b/src/main/java/net/minecraft/world/item/enchantment/UntouchingEnchantment.java
index c4245ecf24066c708beb434a3b610fc7c6b07044..84550504d647224cb9e8559cf40aa6e98af10dc8 100644
--- a/src/main/java/net/minecraft/world/item/enchantment/UntouchingEnchantment.java
+++ b/src/main/java/net/minecraft/world/item/enchantment/UntouchingEnchantment.java
@@ -7,6 +7,13 @@ public class UntouchingEnchantment extends Enchantment {
         super(weight, EnchantmentCategory.DIGGER, slotTypes);
     }
 
+    // KioCG start
+    @Override
+    public boolean canEnchant(net.minecraft.world.item.ItemStack stack) {
+        return EnchantmentCategory.TOOL_AND_SHEARS.canEnchant(stack.getItem());
+    }
+    // KioCG end
+
     @Override
     public int getMinCost(int level) {
         return 15;
