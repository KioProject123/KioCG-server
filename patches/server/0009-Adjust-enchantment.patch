From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Joket_abc <15005771700@qq.com>
Date: Wed, 16 Nov 2022 22:37:53 +0800
Subject: [PATCH] Adjust enchantment


diff --git a/src/main/java/net/minecraft/world/inventory/AnvilMenu.java b/src/main/java/net/minecraft/world/inventory/AnvilMenu.java
index 0951f89827ca959357a4febef3213044169e7579..e03860f341aacead6b9bcc0f25c427a3211231eb 100644
--- a/src/main/java/net/minecraft/world/inventory/AnvilMenu.java
+++ b/src/main/java/net/minecraft/world/inventory/AnvilMenu.java
@@ -227,8 +227,10 @@ public class AnvilMenu extends ItemCombinerMenu {
                             int l1 = (Integer) map.getOrDefault(enchantment, 0);
                             int i2 = (Integer) map1.get(enchantment);
 
+                            if (i2 != 0) // KioCG - level 0
                             i2 = l1 == i2 ? i2 + 1 : Math.max(i2, l1);
                             boolean flag3 = canDoUnsafeEnchants || (org.purpurmc.purpur.PurpurConfig.allowUnsafeEnchants && org.purpurmc.purpur.PurpurConfig.allowInapplicableEnchants) || enchantment.canEnchant(itemstack); // Purpur
+                            flag3 = flag3 || enchantment instanceof net.minecraft.world.item.enchantment.BindingCurseEnchantment && net.minecraft.world.item.enchantment.EnchantmentCategory.VANISHABLE.canEnchant(itemstack.getItem()); // KioCG
                             boolean flag4 = true; // Purpur
 
                             if (this.player.getAbilities().instabuild || itemstack.is(Items.ENCHANTED_BOOK)) {
@@ -242,6 +244,7 @@ public class AnvilMenu extends ItemCombinerMenu {
 
                                 if (enchantment1 != enchantment && !enchantment.isCompatibleWith(enchantment1)) {
                                     flag4 = canDoUnsafeEnchants || (org.purpurmc.purpur.PurpurConfig.allowUnsafeEnchants && org.purpurmc.purpur.PurpurConfig.allowIncompatibleEnchants); // Purpur flag3 -> flag4
+                                    flag4 = flag4 || i2 == 0; // KioCG - 修复0级魔咒在冲突时不能生效的问题 (主要针对神器)
                                     if (!flag4 && org.purpurmc.purpur.PurpurConfig.replaceIncompatibleEnchants) {
                                         iterator1.remove();
                                         flag4 = true;
@@ -279,6 +282,7 @@ public class AnvilMenu extends ItemCombinerMenu {
                                     j2 = Math.max(1, j2 / 2);
                                 }
 
+                                if (i2 == 0) { ++i; } else // KioCG - level 0
                                 i += j2 * i2;
                                 if (itemstack.getCount() > 1) {
                                     i = 40;
diff --git a/src/main/java/net/minecraft/world/item/CrossbowItem.java b/src/main/java/net/minecraft/world/item/CrossbowItem.java
index 2c51a73ebfd05af21b0f5d731fc9f1df77fed1a1..de3f4b10a98edf8b8afc178d7f78bca26ede6391 100644
--- a/src/main/java/net/minecraft/world/item/CrossbowItem.java
+++ b/src/main/java/net/minecraft/world/item/CrossbowItem.java
@@ -317,6 +317,13 @@ public class CrossbowItem extends ProjectileWeaponItem implements Vanishable {
                     CrossbowItem.shootProjectile(world, entity, hand, stack, itemstack1, afloat[i], flag, speed, divergence, -10.0F);
                 } else if (i == 2) {
                     CrossbowItem.shootProjectile(world, entity, hand, stack, itemstack1, afloat[i], flag, speed, divergence, 10.0F);
+                    // KioCG start
+                } else {
+                    RandomSource random = entity.getRandom();
+                    float afloat0 = 1.0F / (random.nextFloat() * 0.5F + 1.8F) + (random.nextFloat() * 0.2F + 0.43F);
+                    float simulated0 = random.nextFloat() * (random.nextBoolean() ? -10.0F : 10.0F);
+                    CrossbowItem.shootProjectile(world, entity, hand, stack, itemstack1, afloat0, flag, speed, divergence, simulated0);
+                    // KioCG end
                 }
             }
         }
@@ -384,6 +391,7 @@ public class CrossbowItem extends ProjectileWeaponItem implements Vanishable {
     public static int getChargeDuration(ItemStack stack) {
         int i = EnchantmentHelper.getItemEnchantmentLevel(Enchantments.QUICK_CHARGE, stack);
 
+        if (i > 5) i = 5; // KioCG
         return i == 0 ? 25 : 25 - 5 * i;
     }
 
diff --git a/src/main/java/net/minecraft/world/item/enchantment/EnchantmentCategory.java b/src/main/java/net/minecraft/world/item/enchantment/EnchantmentCategory.java
index fc2c35f57436371cb0111aedfd289ac95d506d07..a09bd528218d44630300fcf8f263e7b164d7051d 100644
--- a/src/main/java/net/minecraft/world/item/enchantment/EnchantmentCategory.java
+++ b/src/main/java/net/minecraft/world/item/enchantment/EnchantmentCategory.java
@@ -135,6 +135,14 @@ public enum EnchantmentCategory {
             return WEAPON.canEnchant(item) || item instanceof net.minecraft.world.item.ShearsItem;
         }
     // Purpur end
+    // KioCG start
+    },
+    TOOL_AND_SHEARS {
+        @Override
+        public boolean canEnchant(Item item) {
+            return DIGGER.canEnchant(item) || item instanceof net.minecraft.world.item.ShearsItem;
+        }
+    // KioCG end
     };
 
     public abstract boolean canEnchant(Item item);
diff --git a/src/main/java/net/minecraft/world/item/enchantment/EnchantmentHelper.java b/src/main/java/net/minecraft/world/item/enchantment/EnchantmentHelper.java
index 1eec84e217f6dc929091fa7451cd235ef3623822..25c386cdf1b29836e236c569a4123c543c81a341 100644
--- a/src/main/java/net/minecraft/world/item/enchantment/EnchantmentHelper.java
+++ b/src/main/java/net/minecraft/world/item/enchantment/EnchantmentHelper.java
@@ -255,11 +255,17 @@ public class EnchantmentHelper {
     }
 
     public static boolean hasBindingCurse(ItemStack stack) {
-        return getItemEnchantmentLevel(Enchantments.BINDING_CURSE, stack) > 0;
+        // KioCG start
+        int level = getItemEnchantmentLevel(Enchantments.BINDING_CURSE, stack);
+        return level > 0 && level < 5;
+        // KioCG end
     }
 
     public static boolean hasVanishingCurse(ItemStack stack) {
-        return getItemEnchantmentLevel(Enchantments.VANISHING_CURSE, stack) > 0;
+        // KioCG start
+        int level = getItemEnchantmentLevel(Enchantments.VANISHING_CURSE, stack);
+        return level > 0 && level < 5;
+        // KioCG end
     }
 
     public static boolean hasSilkTouch(ItemStack stack) {
diff --git a/src/main/java/net/minecraft/world/item/enchantment/MendingEnchantment.java b/src/main/java/net/minecraft/world/item/enchantment/MendingEnchantment.java
index 7c0b880b0d1b409a03fe6cde5d0686a79d64cb7d..4d3590f6b13f29938bbb92252ee7e3ec5ce477c5 100644
--- a/src/main/java/net/minecraft/world/item/enchantment/MendingEnchantment.java
+++ b/src/main/java/net/minecraft/world/item/enchantment/MendingEnchantment.java
@@ -21,4 +21,11 @@ public class MendingEnchantment extends Enchantment {
     public boolean isTreasureOnly() {
         return true;
     }
+
+    // KioCG start
+    @Override
+    public boolean canEnchant(net.minecraft.world.item.ItemStack stack) {
+        return !stack.is(net.minecraft.world.item.Items.ELYTRA) && super.canEnchant(stack);
+    }
+    // KioCG end
 }
diff --git a/src/main/java/net/minecraft/world/item/enchantment/UntouchingEnchantment.java b/src/main/java/net/minecraft/world/item/enchantment/UntouchingEnchantment.java
index c4245ecf24066c708beb434a3b610fc7c6b07044..84550504d647224cb9e8559cf40aa6e98af10dc8 100644
--- a/src/main/java/net/minecraft/world/item/enchantment/UntouchingEnchantment.java
+++ b/src/main/java/net/minecraft/world/item/enchantment/UntouchingEnchantment.java
@@ -7,6 +7,13 @@ public class UntouchingEnchantment extends Enchantment {
         super(weight, EnchantmentCategory.DIGGER, slotTypes);
     }
 
+    // KioCG start
+    @Override
+    public boolean canEnchant(net.minecraft.world.item.ItemStack stack) {
+        return EnchantmentCategory.TOOL_AND_SHEARS.canEnchant(stack.getItem());
+    }
+    // KioCG end
+
     @Override
     public int getMinCost(int level) {
         return 15;
